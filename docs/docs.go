// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "LyFive",
            "url": "https://lyfive.github.io/",
            "email": "1169442146@qq.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/check": {
            "post": {
                "description": "根据header的token值检查token是否过期",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "checkUser"
                ],
                "summary": "检查token是否过期",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/grade/add": {
            "post": {
                "description": "根据学生id和课程id添加成绩",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "成绩组"
                ],
                "summary": "添加成绩",
                "parameters": [
                    {
                        "description": "添加成绩",
                        "name": "grade",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Grade"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "发送账密验证登录，返回用户信息和token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "login"
                ],
                "summary": "登录并获取用户信息",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "发送姓名账密注册普通用户",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "register"
                ],
                "summary": "根据用户信息注册普通用户",
                "parameters": [
                    {
                        "description": "用户信息",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Message"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/delete": {
            "delete": {
                "description": "删除用户，只有管理员可以删除用户",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "用户"
                ],
                "summary": "删除用户",
                "parameters": [
                    {
                        "description": "用户ID",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.UserID"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SUCCESS"
                    },
                    "401": {
                        "description": "权限不足"
                    }
                }
            }
        },
        "/user/modify": {
            "put": {
                "description": "高权限可以修改低权限信息，但是提权和自己同水平就不能修改",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "用户"
                ],
                "summary": "修改用户信息",
                "parameters": [
                    {
                        "description": "修改后的用户信息",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Message"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SUCCESS"
                    },
                    "401": {
                        "description": "权限不足"
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "description": "在用户界面为用户注册，可以进行提权、添加头像",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "用户"
                ],
                "summary": "用户注册",
                "parameters": [
                    {
                        "description": "用户注册信息",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Message"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SUCCESS"
                    },
                    "401": {
                        "description": "权限不足"
                    }
                }
            }
        },
        "/user/users": {
            "get": {
                "description": "获取用户列表，只有管理员可以获取用户列表",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "用户"
                ],
                "summary": "获取用户列表",
                "responses": {
                    "200": {
                        "description": "SUCCESS"
                    },
                    "401": {
                        "description": "权限不足"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Grade": {
            "type": "object",
            "properties": {
                "cid": {
                    "description": "绑定课程ID",
                    "type": "integer"
                },
                "gid": {
                    "description": "成绩ID",
                    "type": "integer"
                },
                "mark": {
                    "description": "分数",
                    "type": "integer"
                },
                "number": {
                    "description": "绑定学生学号",
                    "type": "string"
                }
            }
        },
        "models.Message": {
            "type": "object",
            "properties": {
                "head": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "level": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "v1.UserID": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Student Management System",
	Description:      "使用Go+Gin+Vue3+Element-plus的框架开发的学生管理系统管理后台",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
